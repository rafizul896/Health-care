generator client {
  provider = "prisma-client-js"
  // output   = "./node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id String @id @default(uuid())
  email String @unique
  password String
  role UserRole @default(PATIENT)
  needPasswordChange Boolean @default(true)
  status UserStatus @default(ACTIVE)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  // one to one relation
  admin Admin? 
  doctor Doctor?
  patient Patient?

  @@map("users")
}

model Admin {
  id String @id @default(uuid())
  name String
  email String @unique
  profilePhoto String?
  contactNumber String
  isDeleted Boolean @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [email],references: [email])

  @@map("admins")
}

model Doctor {
  id String @id @default(uuid())
  name String
  email String @unique
  profilePhoto String?
  contactNumber String
  address String?
  registrationNumber String
  experience Int @default(0)
  gender Gender
  appointmentFee Int
  qualification String
  currentWorkingPlace String
  designaton String
  isDeleted Boolean @default(false)
  averageRating Float @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [email],references: [email])
  doctorSpecialties DoctorSpecialties[]

  @@map("doctors")
}

model Patient {
  id String @id @default(uuid())
  name String 
  email String @unique
  profilePhoto String?
  contactNumber String
  address String
  bloodGroup BloodGroup?
  gender Gender
  age Int
  dateOfBirth DateTime?
  isDeleted Boolean @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [email],references: [email])

  @@map("patients")
}

model Specialties {
  id String @id @default(uuid())
  title String
  icon String
  doctorSpecialties DoctorSpecialties[]

  @@map("specialties")
}

model DoctorSpecialties {
  specialitiesId String
  specialties Specialties @relation(fields: [specialitiesId],references: [id])
  doctorId String
  doctor Doctor @relation(fields: [doctorId],references: [id])

  @@id([specialitiesId,doctorId])
  @@map("doctor_specialties")
}

enum UserRole {
  SUPER_ADMIN
  ADMIN
  DOCTOR
  PATIENT
}

enum UserStatus {
 ACTIVE
 BLOCKED
 DELETED
}

enum Gender {
  MALE
  FEMALE
}

enum BloodGroup {
  A_POSITIVE
  A_NEGATIVE
  B_POSITIVE
  B_NEGATIVE
  AB_POSITIVE
  AB_NEGATIVE
  O_POSITIVE
  O_NEGATIVE
}




